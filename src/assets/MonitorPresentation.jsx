/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 .\public\models\MonitorPresentation.glb 
*/

import React from "react";
import { useFrame, useGraph } from "@react-three/fiber";
import { Sphere, useGLTF } from "@react-three/drei";
import { Monitor } from "./Monitor";

const Particles = () => {
  let result = [];
  for (let i = 0; i < 50; i++) {
    const position = [
      (Math.random() - 0.5) * 10,
      (Math.random() - 0.5) * 10,
      (Math.random() - 0.5) * 10,
    ];
    const _rotation = Math.random() * 180;
    const rotation = [_rotation, _rotation, _rotation];
    const _scales = Math.random();
    const scale = [_scales, _scales, _scales];
    // console.log(position);
    result.push(
      <Monitor scale={scale} position={position} rotation={rotation} key={i}>
        {/* <meshBasicMaterial color={"#4851BF"} /> */}
      </Monitor>
    );
  }
  return result;
};
useGLTF.preload("./models/MonitorPresentation.glb");
export function MonitorPresentation() {
  const particles = React.useRef(null);
  useFrame((state) => {
    particles.current.rotation.y = state.pointer.x * 0.1;
    particles.current.rotation.x = -state.pointer.y * 0.1;
  });
  return (
    <>
      <Monitor />
      <group ref={particles}>
        <Particles />
      </group>
    </>
  );
}
