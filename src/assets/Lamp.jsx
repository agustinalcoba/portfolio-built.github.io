/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 .\public\models\Lamp.glb 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Lamp(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('./models/Lamp.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="LampArmature">
          <primitive object={nodes.LowerSupport} />
          <skinnedMesh name="Base" geometry={nodes.Base.geometry} material={materials.Wooden} skeleton={nodes.Base.skeleton} />
          <group name="Lamp">
            <skinnedMesh name="Cube004" geometry={nodes.Cube004.geometry} material={materials.Lamp} skeleton={nodes.Cube004.skeleton} />
            <skinnedMesh name="Cube004_1" geometry={nodes.Cube004_1.geometry} material={materials.LampLight} skeleton={nodes.Cube004_1.skeleton} />
          </group>
          <group name="LowerSupportStick">
            <skinnedMesh name="Mesh_1" geometry={nodes.Mesh_1.geometry} material={materials.Wooden} skeleton={nodes.Mesh_1.skeleton} />
            <skinnedMesh name="Mesh_2" geometry={nodes.Mesh_2.geometry} material={materials.Lamp} skeleton={nodes.Mesh_2.skeleton} />
          </group>
          <skinnedMesh name="Pole" geometry={nodes.Pole.geometry} material={materials.Lamp} skeleton={nodes.Pole.skeleton} />
          <group name="SupportStick">
            <skinnedMesh name="Mesh_4" geometry={nodes.Mesh_4.geometry} material={materials.Wooden} skeleton={nodes.Mesh_4.skeleton} />
            <skinnedMesh name="Mesh_5" geometry={nodes.Mesh_5.geometry} material={materials.Lamp} skeleton={nodes.Mesh_5.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./models/Lamp.glb')
