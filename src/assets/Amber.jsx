/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 .\public\models\Amber.glb 
*/

import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function Amber(props) {
  const group = React.useRef();
  const { scene, animations } = useGLTF("./models/Amber.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions["Presentation"].play();
    // console.log(actions);
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="rig">
          <primitive object={nodes.root} />
          <primitive object={nodes["MCH-torsoparent"]} />
          <primitive object={nodes["MCH-hand_ikparentL"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentL"]} />
          <primitive object={nodes["MCH-hand_ikparentR"]} />
          <primitive object={nodes["MCH-upper_arm_ik_targetparentR"]} />
          <primitive object={nodes["MCH-foot_ikparentL"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentL"]} />
          <primitive object={nodes["MCH-foot_ikparentR"]} />
          <primitive object={nodes["MCH-thigh_ik_targetparentR"]} />
          <skinnedMesh
            name="Chest"
            geometry={nodes.Chest.geometry}
            material={materials.Plastic}
            skeleton={nodes.Chest.skeleton}
          />
          <skinnedMesh
            name="Feet"
            geometry={nodes.Feet.geometry}
            material={materials.Plastic}
            skeleton={nodes.Feet.skeleton}
          />
          <skinnedMesh
            name="ForeArms"
            geometry={nodes.ForeArms.geometry}
            material={materials.Plastic}
            skeleton={nodes.ForeArms.skeleton}
          />
          <skinnedMesh
            name="Hands"
            geometry={nodes.Hands.geometry}
            material={materials.Plastic}
            skeleton={nodes.Hands.skeleton}
          />
          <skinnedMesh
            name="Head"
            geometry={nodes.Head.geometry}
            material={materials.Plastic}
            skeleton={nodes.Head.skeleton}
          />
          <skinnedMesh
            name="Hips"
            geometry={nodes.Hips.geometry}
            material={materials.Plastic}
            skeleton={nodes.Hips.skeleton}
          />
          <skinnedMesh
            name="Knees"
            geometry={nodes.Knees.geometry}
            material={materials.Plastic}
            skeleton={nodes.Knees.skeleton}
          />
          <skinnedMesh
            name="Legs"
            geometry={nodes.Legs.geometry}
            material={materials.Plastic}
            skeleton={nodes.Legs.skeleton}
          />
          <skinnedMesh
            name="LowerArms"
            geometry={nodes.LowerArms.geometry}
            material={materials.Plastic}
            skeleton={nodes.LowerArms.skeleton}
          />
          <skinnedMesh
            name="LowerThighs"
            geometry={nodes.LowerThighs.geometry}
            material={materials.Plastic}
            skeleton={nodes.LowerThighs.skeleton}
          />
          <skinnedMesh
            name="Shoulder"
            geometry={nodes.Shoulder.geometry}
            material={materials.Plastic}
            skeleton={nodes.Shoulder.skeleton}
          />
          <skinnedMesh
            name="UpperArms"
            geometry={nodes.UpperArms.geometry}
            material={materials.Plastic}
            skeleton={nodes.UpperArms.skeleton}
          />
          <skinnedMesh
            name="UpperThighs"
            geometry={nodes.UpperThighs.geometry}
            material={materials.Plastic}
            skeleton={nodes.UpperThighs.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./models/Amber.glb");
