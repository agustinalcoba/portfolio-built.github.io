/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 .\public\models\Headphones.glb 
*/

import React from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function Headphones(props) {
  const { scene } = useGLTF("./models/Headphones.glb");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Root} />
      <skinnedMesh
        geometry={nodes.Cube001.geometry}
        material={materials.Headphones}
        skeleton={nodes.Cube001.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube002.geometry}
        material={materials.Color}
        skeleton={nodes.Cube002.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube003.geometry}
        material={materials.Color}
        skeleton={nodes.Cube003.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube004.geometry}
        material={materials.Color}
        skeleton={nodes.Cube004.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube005.geometry}
        material={materials.Headphones}
        skeleton={nodes.Cube005.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube006.geometry}
        material={materials.Color}
        skeleton={nodes.Cube006.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube007.geometry}
        material={materials.Headphones}
        skeleton={nodes.Cube007.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube008.geometry}
        material={materials.Color}
        skeleton={nodes.Cube008.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Cube009.geometry}
        material={materials.Headphones}
        skeleton={nodes.Cube009.skeleton}
      />
    </group>
  );
}

useGLTF.preload("./models/Headphones.glb");
